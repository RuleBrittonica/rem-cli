(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [rem_cli] *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Module ExtractDoesNotWrapResInResRef.rs.

(** [core::result::Result]
    Source: '/rustc/library/core/src/result.rs', lines 527:0-527:21
    Name pattern: core::result::Result *)
Inductive core_result_Result_t (T : Type) (E : Type) :=
| Core_result_Result_Ok : T -> core_result_Result_t T E
| Core_result_Result_Err : E -> core_result_Result_t T E
.

Arguments Core_result_Result_Ok { _ } { _ }.
Arguments Core_result_Result_Err { _ } { _ }.

(** [core::ops::control_flow::ControlFlow]
    Source: '/rustc/library/core/src/ops/control_flow.rs', lines 85:0-85:31
    Name pattern: core::ops::control_flow::ControlFlow *)
Inductive core_ops_control_flow_ControlFlow_t (B : Type) (C : Type) :=
| Core_ops_control_flow_ControlFlow_Continue :
  C ->
  core_ops_control_flow_ControlFlow_t B C
| Core_ops_control_flow_ControlFlow_Break :
  B ->
  core_ops_control_flow_ControlFlow_t B C
.

Arguments Core_ops_control_flow_ControlFlow_Continue { _ } { _ }.
Arguments Core_ops_control_flow_ControlFlow_Break { _ } { _ }.

(** [core::convert::Infallible]
    Source: '/rustc/library/core/src/convert/mod.rs', lines 904:0-904:19
    Name pattern: core::convert::Infallible *)
Inductive core_convert_Infallible_t :=.

(** [core::result::{core::ops::try_trait::Try for core::result::Result<T, E>}#26::branch]:
    Source: '/rustc/library/core/src/result.rs', lines 1994:4-1994:64
    Name pattern: core::result::{core::ops::try_trait::Try<core::result::Result<@T, @E>>}::branch *)
Axiom core_result_TrycoreresultResult_branch :
  forall{T : Type} {E : Type},
        core_result_Result_t T E -> result (core_ops_control_flow_ControlFlow_t
          (core_result_Result_t core_convert_Infallible_t E) T)
.

(** [core::result::{core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible, E>> for core::result::Result<T, F>}#27::from_residual]:
    Source: '/rustc/library/core/src/result.rs', lines 2006:4-2006:70
    Name pattern: core::result::{core::ops::try_trait::FromResidual<core::result::Result<@T, @F>, core::result::Result<core::convert::Infallible, @E>>}::from_residual *)
Axiom
  core_result_FromResidualcoreresultResultcoreresultResultcoreconvertInfallibleE_from_residual
  :
  forall(T : Type) {E : Type} {F : Type} (convertFromInst : core_convert_From F
        E),
        core_result_Result_t core_convert_Infallible_t E -> result
          (core_result_Result_t T F)
.

(** [core::convert::{core::convert::From<T> for T}#4::from]:
    Source: '/rustc/library/core/src/convert/mod.rs', lines 768:4-768:22
    Name pattern: core::convert::{core::convert::From<@T, @T>}::from *)
Axiom core_convert_From_from : forall{T : Type}, T -> result T.

(** Trait implementation: [core::convert::{core::convert::From<T> for T}#4]
    Source: '/rustc/library/core/src/convert/mod.rs', lines 765:0-765:21
    Name pattern: core::convert::From<@Self, @Self> *)
Definition core_convert_From (T : Type) : core_convert_From T T := {|
  from_ := core_convert_From_from;
|}.

(** [rem_cli::fun_name]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_does_not_wrap_res_in_res_ref.rs', lines 5:0-8:1 *)
Definition fun_name : result (core_result_Result_t unit i64) :=
  cf <- core_result_TrycoreresultResult_branch (Core_result_Result_Ok 0%i32);
  match cf with
  | Core_ops_control_flow_ControlFlow_Continue _ =>
    Ok (Core_result_Result_Ok tt)
  | Core_ops_control_flow_ControlFlow_Break residual =>
    core_result_FromResidualcoreresultResultcoreresultResultcoreconvertInfallibleE_from_residual
      unit (core_convert_From i64) residual
  end
.

(** [rem_cli::foo]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_does_not_wrap_res_in_res_ref.rs', lines 1:0-3:1 *)
Definition foo : result (core_result_Result_t unit i64) :=
  fun_name.

(** [rem_cli::main]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_does_not_wrap_res_in_res_ref.rs', lines 10:0-12:1 *)
Definition main : result unit :=
  Ok tt.

(** Trait declaration: [core::ops::try_trait::FromResidual]
    Source: '/rustc/library/core/src/ops/try_trait.rs', lines 307:0-307:51
    Name pattern: core::ops::try_trait::FromResidual *)
Record core_ops_try_trait_FromResidual_t (Self : Type) (R : Type)
  := mkcore_ops_try_trait_FromResidual_t {
  core_ops_try_trait_FromResidual_t_from_residual : R -> result Self;
}.

Arguments mkcore_ops_try_trait_FromResidual_t { _ } { _ }.
Arguments core_ops_try_trait_FromResidual_t_from_residual { _ } { _ } _.

(** Trait declaration: [core::ops::try_trait::Try]
    Source: '/rustc/library/core/src/ops/try_trait.rs', lines 131:0-131:27
    Name pattern: core::ops::try_trait::Try *)
Record core_ops_try_trait_Try_t (Self : Type) := mkcore_ops_try_trait_Try_t {
  core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Output : Type;
  core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Residual : Type;
  core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_FromResidualSelfcoreopstry_traitTryResidualInst
    : core_ops_try_trait_FromResidual_t Self
    core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Residual;
  core_ops_try_trait_Try_t_from_output :
    core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Output -> result Self;
  core_ops_try_trait_Try_t_branch : Self -> result
    (core_ops_control_flow_ControlFlow_t
    core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Residual
    core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Output);
}.

Arguments mkcore_ops_try_trait_Try_t { _ }.
Arguments core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Output { _ } _.
Arguments core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Residual { _ } _.
Arguments
  core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_FromResidualSelfcoreopstry_traitTryResidualInst
  { _ } _.
Arguments core_ops_try_trait_Try_t_from_output { _ } _.
Arguments core_ops_try_trait_Try_t_branch { _ } _.

(** Trait implementation: [core::result::{core::ops::try_trait::FromResidual<core::result::Result<core::convert::Infallible, E>> for core::result::Result<T, F>}#27]
    Source: '/rustc/library/core/src/result.rs', lines 2003:0-2003:89
    Name pattern: core::ops::try_trait::FromResidual<core::result::Result<@Self, @>, core::result::Result<core::convert::Infallible, @R>> *)
Definition
  core_ops_try_trait_FromResidualcoreresultResultcoreresultResultcoreconvertInfallibleE
  (T : Type) {E : Type} {F : Type} (convertFromInst : core_convert_From F E) :
  core_ops_try_trait_FromResidual_t (core_result_Result_t T F)
  (core_result_Result_t core_convert_Infallible_t E) := {|
  core_ops_try_trait_FromResidual_t_from_residual :=
    core_result_FromResidualcoreresultResultcoreresultResultcoreconvertInfallibleE_from_residual
    T convertFromInst;
|}.

(** [core::result::{core::ops::try_trait::Try for core::result::Result<T, E>}#26::from_output]:
    Source: '/rustc/library/core/src/result.rs', lines 1989:4-1989:48
    Name pattern: core::result::{core::ops::try_trait::Try<core::result::Result<@T, @E>>}::from_output *)
Axiom core_result_TrycoreresultResult_from_output :
  forall{T : Type} (E : Type), T -> result (core_result_Result_t T E)
.

(** Trait implementation: [core::result::{core::ops::try_trait::Try for core::result::Result<T, E>}#26]
    Source: '/rustc/library/core/src/result.rs', lines 1984:0-1984:36
    Name pattern: core::ops::try_trait::Try<core::result::Result<@Self, @>> *)
Definition core_ops_try_trait_TrycoreresultResult (T : Type) (E : Type) :
  core_ops_try_trait_Try_t (core_result_Result_t T E) := {|
  core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Output := T;
  core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Residual :=
    core_result_Result_t core_convert_Infallible_t E;
  core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_FromResidualSelfcoreopstry_traitTryResidualInst
    :=
    core_ops_try_trait_FromResidualcoreresultResultcoreresultResultcoreconvertInfallibleE
    T (core_convert_From E);
  core_ops_try_trait_Try_t_from_output :=
    core_result_TrycoreresultResult_from_output E;
  core_ops_try_trait_Try_t_branch := core_result_TrycoreresultResult_branch;
|}.

End ExtractDoesNotWrapResInResRef.rs.
