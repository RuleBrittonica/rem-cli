(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [rem_cli] *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Module ExtractMethodFromTraitWithMultipleExistingTraitImplBlocks.rs.

(** [rem_cli::Struct]
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_method_from_trait_with_multiple_existing_trait_impl_blocks.rs', lines 1:0-1:19 *)
Definition Struct_t : Type := i32.

(** Trait declaration: [rem_cli::Trait]
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_method_from_trait_with_multiple_existing_trait_impl_blocks.rs', lines 2:0-4:1 *)
Record Trait_t (Self : Type) := mkTrait_t { Trait_t_bar : Self -> result i32;
}.

Arguments mkTrait_t { _ }.
Arguments Trait_t_bar { _ } _.

(** Trait declaration: [rem_cli::TraitBefore]
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_method_from_trait_with_multiple_existing_trait_impl_blocks.rs', lines 5:0-7:1 *)
Record TraitBefore_t (Self : Type) := mkTraitBefore_t {
  TraitBefore_t_before : Self -> result i32;
}.

Arguments mkTraitBefore_t { _ }.
Arguments TraitBefore_t_before { _ } _.

(** Trait declaration: [rem_cli::TraitAfter]
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_method_from_trait_with_multiple_existing_trait_impl_blocks.rs', lines 8:0-10:1 *)
Record TraitAfter_t (Self : Type) := mkTraitAfter_t {
  TraitAfter_t_after : Self -> result i32;
}.

Arguments mkTraitAfter_t { _ }.
Arguments TraitAfter_t_after { _ } _.

(** [rem_cli::{rem_cli::TraitBefore for rem_cli::Struct}::before]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_method_from_trait_with_multiple_existing_trait_impl_blocks.rs', lines 13:4-15:5 *)
Definition traitBeforerem_cliStruct_before (self : Struct_t) : result i32 :=
  Ok 42%i32
.

(** Trait implementation: [rem_cli::{rem_cli::TraitBefore for rem_cli::Struct}]
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_method_from_trait_with_multiple_existing_trait_impl_blocks.rs', lines 12:0-16:1 *)
Definition TraitBeforerem_cliStruct : TraitBefore_t Struct_t := {|
  TraitBefore_t_before := traitBeforerem_cliStruct_before;
|}.

(** [rem_cli::{rem_cli::Struct}#1::foo]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_method_from_trait_with_multiple_existing_trait_impl_blocks.rs', lines 19:4-19:14 *)
Definition struct_foo : result unit :=
  Ok tt.

(** [rem_cli::{rem_cli::TraitAfter for rem_cli::Struct}#2::after]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_method_from_trait_with_multiple_existing_trait_impl_blocks.rs', lines 23:4-25:5 *)
Definition traitAfterrem_cliStruct_after (self : Struct_t) : result i32 :=
  Ok 42%i32
.

(** Trait implementation: [rem_cli::{rem_cli::TraitAfter for rem_cli::Struct}#2]
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_method_from_trait_with_multiple_existing_trait_impl_blocks.rs', lines 22:0-26:1 *)
Definition TraitAfterrem_cliStruct : TraitAfter_t Struct_t := {|
  TraitAfter_t_after := traitAfterrem_cliStruct_after;
|}.

(** [rem_cli::{rem_cli::Trait for rem_cli::Struct}#3::bar]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_method_from_trait_with_multiple_existing_trait_impl_blocks.rs', lines 29:4-31:5 *)
Definition traitrem_cliStruct_bar (self : Struct_t) : result i32 :=
  i32_add self 2%i32
.

(** Trait implementation: [rem_cli::{rem_cli::Trait for rem_cli::Struct}#3]
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_method_from_trait_with_multiple_existing_trait_impl_blocks.rs', lines 28:0-32:1 *)
Definition Traitrem_cliStruct : Trait_t Struct_t := {|
  Trait_t_bar := traitrem_cliStruct_bar;
|}.

(** [rem_cli::main]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/extract_method_from_trait_with_multiple_existing_trait_impl_blocks.rs', lines 34:0-36:1 *)
Definition main : result unit :=
  Ok tt.

End ExtractMethodFromTraitWithMultipleExistingTraitImplBlocks.rs.
