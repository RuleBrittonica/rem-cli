(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [rem_cli] *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Module MutNestedFieldFromOuterScopeRef.rs.

(** [rem_cli::P]
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/mut_nested_field_from_outer_scope_ref.rs', lines 1:0-1:18 *)
Record P_t := mkP_t { p_n : i32; }.

(** [rem_cli::C]
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/mut_nested_field_from_outer_scope_ref.rs', lines 2:0-2:17 *)
Record C_t := mkC_t { c_p : P_t; }.

(** [rem_cli::fun_name]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/mut_nested_field_from_outer_scope_ref.rs', lines 11:0-14:1 *)
Definition fun_name (c : C_t) (u : C_t) (v : C_t) : result (C_t * C_t) :=
  i <- i32_add c.(c_p).(p_n) u.(c_p).(p_n); Ok ({| c_p := {| p_n := i |} |}, v)
.

(** [rem_cli::foo]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/mut_nested_field_from_outer_scope_ref.rs', lines 3:0-9:1 *)
Definition foo : result unit :=
  p <-
    fun_name {| c_p := {| p_n := 0%i32 |} |} {| c_p := {| p_n := 0%i32 |} |}
      {| c_p := {| p_n := 0%i32 |} |};
  let (c, v) := p in
  i <- i32_add c.(c_p).(p_n) v.(c_p).(p_n);
  _ <- i32_add i 0%i32;
  Ok tt
.

(** [rem_cli::main]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/mut_nested_field_from_outer_scope_ref.rs', lines 16:0-18:1 *)
Definition main : result unit :=
  Ok tt.

End MutNestedFieldFromOuterScopeRef.rs.
