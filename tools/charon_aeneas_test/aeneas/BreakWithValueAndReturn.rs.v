(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [rem_cli] *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Module BreakWithValueAndReturn.rs.

(** [rem_cli::foo]: loop 0:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/break_with_value_and_return.rs', lines 2:4-10:5 *)
Fixpoint foo_loop : result i64 :=
  if 1%i32 s= 42%i32
  then Ok 3%i64
  else (m <- i32_add 1%i32 1%i32; _ <- i32_add 1%i32 m; foo_loop)
.

(** [rem_cli::foo]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/break_with_value_and_return.rs', lines 1:0-11:1 *)
Definition foo : result i64 :=
  foo_loop.

(** [rem_cli::main]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/break_with_value_and_return.rs', lines 13:0-15:1 *)
Definition main : result unit :=
  Ok tt.

End BreakWithValueAndReturn.rs.
