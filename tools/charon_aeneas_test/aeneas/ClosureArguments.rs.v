(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [rem_cli] *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Module ClosureArguments.rs.

(** [core::iter::adapters::map::Map]
    Source: '/rustc/library/core/src/iter/adapters/map.rs', lines 61:0-61:20
    Name pattern: core::iter::adapters::map::Map *)
Axiom core_iter_adapters_map_Map_t : forall (I : Type) (F : Type), Type.

(** [core::slice::iter::Iter]
    Source: '/rustc/library/core/src/slice/iter.rs', lines 63:0-63:26
    Name pattern: core::slice::iter::Iter *)
Axiom core_slice_iter_Iter_t : forall (T : Type), Type.

(** [core::slice::{@Slice<T>}::iter]:
    Source: '/rustc/library/core/src/slice/mod.rs', lines 1012:4-1012:37
    Name pattern: core::slice::{[@T]}::iter *)
Axiom core_slice_Slice_iter :
  forall{T : Type}, slice T -> result (core_slice_iter_Iter_t T)
.

(** [core::ops::arith::{core::ops::arith::Mul<i32> for &'a (i32)}#171::mul]:
    Source: '/rustc/library/core/src/internal_macros.rs', lines 35:12-35:67
    Name pattern: core::ops::arith::{core::ops::arith::Mul<&''a i32, i32>}::mul *)
Axiom core_ops_arith_Mul&'a I32I32_mul : i32 -> i32 -> result i32.

(** Trait declaration: [core::ops::function::FnOnce]
    Source: '/rustc/library/core/src/ops/function.rs', lines 242:0-242:29
    Name pattern: core::ops::function::FnOnce *)
Record core_ops_function_FnOnce_t (Self : Type) (Args : Type)
  := mkcore_ops_function_FnOnce_t {
  core_ops_function_FnOnce_tcore_ops_function_FnOnce_t_Output : Type;
  core_ops_function_FnOnce_t_call_once : Self -> Args -> result
    core_ops_function_FnOnce_tcore_ops_function_FnOnce_t_Output;
}.

Arguments mkcore_ops_function_FnOnce_t { _ } { _ }.
Arguments core_ops_function_FnOnce_tcore_ops_function_FnOnce_t_Output { _ }
  { _ } _.
Arguments core_ops_function_FnOnce_t_call_once { _ } { _ } _.

(** Trait declaration: [core::ops::function::FnMut]
    Source: '/rustc/library/core/src/ops/function.rs', lines 163:0-163:42
    Name pattern: core::ops::function::FnMut *)
Record core_ops_function_FnMut_t (Self : Type) (Args : Type)
  := mkcore_ops_function_FnMut_t {
  core_ops_function_FnMut_tcore_ops_function_FnMut_t_FnOnceInst :
    core_ops_function_FnOnce_t Self Args;
  core_ops_function_FnMut_t_call_mut : Self -> Args -> result
    ((core_ops_function_FnMut_tcore_ops_function_FnMut_t_FnOnceInst).(core_ops_function_FnOnce_tcore_ops_function_FnOnce_t_Output)
    * Self);
}.

Arguments mkcore_ops_function_FnMut_t { _ } { _ }.
Arguments core_ops_function_FnMut_tcore_ops_function_FnMut_t_FnOnceInst { _ }
  { _ } _.
Arguments core_ops_function_FnMut_t_call_mut { _ } { _ } _.

(** Trait declaration: [core::iter::traits::iterator::Iterator]
    Source: '/rustc/library/core/src/iter/traits/iterator.rs', lines 39:0-39:18
    Name pattern: core::iter::traits::iterator::Iterator *)
Record core_iter_traits_iterator_Iterator_t (Self : Type)
  := mkcore_iter_traits_iterator_Iterator_t {
  core_iter_traits_iterator_Iterator_tcore_iter_traits_iterator_Iterator_t_Item
    : Type;
  core_iter_traits_iterator_Iterator_t_next : Self -> result ((option
    core_iter_traits_iterator_Iterator_tcore_iter_traits_iterator_Iterator_t_Item)
    * Self);
}.

Arguments mkcore_iter_traits_iterator_Iterator_t { _ }.
Arguments
  core_iter_traits_iterator_Iterator_tcore_iter_traits_iterator_Iterator_t_Item
  { _ } _.
Arguments core_iter_traits_iterator_Iterator_t_next { _ } _.

(** Trait implementation: [core::slice::iter::{core::iter::traits::iterator::Iterator for core::slice::iter::Iter<'a, T>}#182]
    Source: '/rustc/library/core/src/slice/iter/macros.rs', lines 152:8-152:45
    Name pattern: core::iter::traits::iterator::Iterator<core::slice::iter::Iter<'_, @Self>> *)
Definition core_iter_traits_iterator_IteratorcoresliceiterIter (T : Type) :
  core_iter_traits_iterator_Iterator_t (core_slice_iter_Iter_t T) := {|
  core_iter_traits_iterator_Iterator_tcore_iter_traits_iterator_Iterator_t_Item
    := T;
  admit
|}.

(** [core::iter::traits::iterator::Iterator::map]:
    Source: '/rustc/library/core/src/iter/traits/iterator.rs', lines 757:4-760:34
    Name pattern: core::iter::traits::iterator::Iterator::map *)
Axiom core_iter_traits_iterator_Iterator_map :
  forall{Self : Type} (self_clause : core_iter_traits_iterator_Iterator_t Self)
        (B : Type) {F : Type}
        (opsfunctionFnMutFTuplecoreitertraitsiteratorIteratorItemInst :
        core_ops_function_FnMut_t F
        self_clause.core_iter_traits_iterator_Iterator_tcore_iter_traits_iterator_Iterator_t_Item),
        Self -> F -> result (core_iter_adapters_map_Map_t Self F)
.

(** [rem_cli::parent]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/closure_arguments.rs', lines 1:0-5:1 *)
Definition parent (factor : i32) : result unit :=
  admit.

(** [rem_cli::main]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/closure_arguments.rs', lines 7:0-9:1 *)
Definition main : result unit :=
  Ok tt.

(** Trait declaration: [core::ops::arith::Mul]
    Source: '/rustc/library/core/src/ops/arith.rs', lines 315:0-315:25
    Name pattern: core::ops::arith::Mul *)
Record core_ops_arith_Mul_t (Self : Type) (Rhs : Type)
  := mkcore_ops_arith_Mul_t {
  core_ops_arith_Mul_tcore_ops_arith_Mul_t_Output : Type;
  core_ops_arith_Mul_t_mul : Self -> Rhs -> result
    core_ops_arith_Mul_tcore_ops_arith_Mul_t_Output;
}.

Arguments mkcore_ops_arith_Mul_t { _ } { _ }.
Arguments core_ops_arith_Mul_tcore_ops_arith_Mul_t_Output { _ } { _ } _.
Arguments core_ops_arith_Mul_t_mul { _ } { _ } _.

(** Trait implementation: [core::ops::arith::{core::ops::arith::Mul<i32> for &'a (i32)}#171]
    Source: '/rustc/library/core/src/internal_macros.rs', lines 30:8-30:36
    Name pattern: core::ops::arith::Mul<&'_ i32, i32> *)
Definition core_ops_arith_Mul&'a I32I32 : core_ops_arith_Mul_t i32 i32 := {|
  core_ops_arith_Mul_tcore_ops_arith_Mul_t_Output := i32;
  core_ops_arith_Mul_t_mul := core_ops_arith_Mul&'a I32I32_mul;
|}.

(** Trait declaration: [core::iter::traits::collect::IntoIterator]
    Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 318:0-318:22
    Name pattern: core::iter::traits::collect::IntoIterator *)
Record core_iter_traits_collect_IntoIterator_t (Self : Type)
  := mkcore_iter_traits_collect_IntoIterator_t {
  core_iter_traits_collect_IntoIterator_tcore_iter_traits_collect_IntoIterator_t_Item
    : Type;
  core_iter_traits_collect_IntoIterator_tcore_iter_traits_collect_IntoIterator_t_IntoIter
    : Type;
  core_iter_traits_collect_IntoIterator_tcore_iter_traits_collect_IntoIterator_t_iteratorIteratorcoreitertraitscollectIntoIteratorIntoIterInst
    : core_iter_traits_iterator_Iterator_t
    core_iter_traits_collect_IntoIterator_tcore_iter_traits_collect_IntoIterator_t_IntoIter;
  core_iter_traits_collect_IntoIterator_t_into_iter : Self -> result
    core_iter_traits_collect_IntoIterator_tcore_iter_traits_collect_IntoIterator_t_IntoIter;
}.

Arguments mkcore_iter_traits_collect_IntoIterator_t { _ }.
Arguments
  core_iter_traits_collect_IntoIterator_tcore_iter_traits_collect_IntoIterator_t_Item
  { _ } _.
Arguments
  core_iter_traits_collect_IntoIterator_tcore_iter_traits_collect_IntoIterator_t_IntoIter
  { _ } _.
Arguments
  core_iter_traits_collect_IntoIterator_tcore_iter_traits_collect_IntoIterator_t_iteratorIteratorcoreitertraitscollectIntoIteratorIntoIterInst
  { _ } _.
Arguments core_iter_traits_collect_IntoIterator_t_into_iter { _ } _.

(** Trait declaration: [core::iter::traits::collect::FromIterator]
    Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 134:0-134:32
    Name pattern: core::iter::traits::collect::FromIterator *)
Record core_iter_traits_collect_FromIterator_t (Self : Type) (A : Type)
  := mkcore_iter_traits_collect_FromIterator_t {
  core_iter_traits_collect_FromIterator_t_from_iter : forall {T : Type}
    (intoIteratorInst : core_iter_traits_collect_IntoIterator_t T), T -> result
    Self;
}.

Arguments mkcore_iter_traits_collect_FromIterator_t { _ } { _ }.
Arguments core_iter_traits_collect_FromIterator_t_from_iter { _ } { _ } _
  { _ }.

(** Trait declaration: [core::ops::try_trait::FromResidual]
    Source: '/rustc/library/core/src/ops/try_trait.rs', lines 307:0-307:51
    Name pattern: core::ops::try_trait::FromResidual *)
Record core_ops_try_trait_FromResidual_t (Self : Type) (R : Type)
  := mkcore_ops_try_trait_FromResidual_t {
  core_ops_try_trait_FromResidual_t_from_residual : R -> result Self;
}.

Arguments mkcore_ops_try_trait_FromResidual_t { _ } { _ }.
Arguments core_ops_try_trait_FromResidual_t_from_residual { _ } { _ } _.

(** [core::ops::control_flow::ControlFlow]
    Source: '/rustc/library/core/src/ops/control_flow.rs', lines 85:0-85:31
    Name pattern: core::ops::control_flow::ControlFlow *)
Inductive core_ops_control_flow_ControlFlow_t (B : Type) (C : Type) :=
| Core_ops_control_flow_ControlFlow_Continue :
  C ->
  core_ops_control_flow_ControlFlow_t B C
| Core_ops_control_flow_ControlFlow_Break :
  B ->
  core_ops_control_flow_ControlFlow_t B C
.

Arguments Core_ops_control_flow_ControlFlow_Continue { _ } { _ }.
Arguments Core_ops_control_flow_ControlFlow_Break { _ } { _ }.

(** Trait declaration: [core::ops::try_trait::Try]
    Source: '/rustc/library/core/src/ops/try_trait.rs', lines 131:0-131:27
    Name pattern: core::ops::try_trait::Try *)
Record core_ops_try_trait_Try_t (Self : Type) := mkcore_ops_try_trait_Try_t {
  core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Output : Type;
  core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Residual : Type;
  core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_FromResidualSelfcoreopstry_traitTryResidualInst
    : core_ops_try_trait_FromResidual_t Self
    core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Residual;
  core_ops_try_trait_Try_t_from_output :
    core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Output -> result Self;
  core_ops_try_trait_Try_t_branch : Self -> result
    (core_ops_control_flow_ControlFlow_t
    core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Residual
    core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Output);
}.

Arguments mkcore_ops_try_trait_Try_t { _ }.
Arguments core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Output { _ } _.
Arguments core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_Residual { _ } _.
Arguments
  core_ops_try_trait_Try_tcore_ops_try_trait_Try_t_FromResidualSelfcoreopstry_traitTryResidualInst
  { _ } _.
Arguments core_ops_try_trait_Try_t_from_output { _ } _.
Arguments core_ops_try_trait_Try_t_branch { _ } _.

(** Trait declaration: [core::ops::try_trait::Residual]
    Source: '/rustc/library/core/src/ops/try_trait.rs', lines 359:0-359:21
    Name pattern: core::ops::try_trait::Residual *)
Record core_ops_try_trait_Residual_t (Self : Type) (O1 : Type)
  := mkcore_ops_try_trait_Residual_t {
  core_ops_try_trait_Residual_tcore_ops_try_trait_Residual_t_TryType : Type;
  core_ops_try_trait_Residual_tcore_ops_try_trait_Residual_t_Trycoreopstry_traitResidualTryTypeInst
    : core_ops_try_trait_Try_t
    core_ops_try_trait_Residual_tcore_ops_try_trait_Residual_t_TryType;
}.

Arguments mkcore_ops_try_trait_Residual_t { _ } { _ }.
Arguments core_ops_try_trait_Residual_tcore_ops_try_trait_Residual_t_TryType
  { _ } { _ } _.
Arguments
  core_ops_try_trait_Residual_tcore_ops_try_trait_Residual_t_Trycoreopstry_traitResidualTryTypeInst
  { _ } { _ } _.

(** Trait declaration: [core::iter::traits::collect::Extend]
    Source: '/rustc/library/core/src/iter/traits/collect.rs', lines 431:0-431:19
    Name pattern: core::iter::traits::collect::Extend *)
Record core_iter_traits_collect_Extend_t (Self : Type) (A : Type)
  := mkcore_iter_traits_collect_Extend_t {
  core_iter_traits_collect_Extend_t_extend : forall {T : Type}
    (intoIteratorInst : core_iter_traits_collect_IntoIterator_t T), Self -> T
    -> result Self;
}.

Arguments mkcore_iter_traits_collect_Extend_t { _ } { _ }.
Arguments core_iter_traits_collect_Extend_t_extend { _ } { _ } _ { _ }.

(** Trait declaration: [core::default::Default]
    Source: '/rustc/library/core/src/default.rs', lines 107:0-107:24
    Name pattern: core::default::Default *)
Record core_default_Default_t (Self : Type) := mkcore_default_Default_t {
  core_default_Default_t_default : result Self;
}.

Arguments mkcore_default_Default_t { _ }.
Arguments core_default_Default_t_default { _ } _.

(** Trait declaration: [core::iter::traits::double_ended::DoubleEndedIterator]
    Source: '/rustc/library/core/src/iter/traits/double_ended.rs', lines 41:0-41:39
    Name pattern: core::iter::traits::double_ended::DoubleEndedIterator *)
Record core_iter_traits_double_ended_DoubleEndedIterator_t (Self : Type)
  := mkcore_iter_traits_double_ended_DoubleEndedIterator_t {
  core_iter_traits_double_ended_DoubleEndedIterator_tcore_iter_traits_double_ended_DoubleEndedIterator_t_iteratorIteratorInst
    : core_iter_traits_iterator_Iterator_t Self;
  core_iter_traits_double_ended_DoubleEndedIterator_t_next_back : Self ->
    result ((option
    (core_iter_traits_double_ended_DoubleEndedIterator_tcore_iter_traits_double_ended_DoubleEndedIterator_t_iteratorIteratorInst).(core_iter_traits_iterator_Iterator_tcore_iter_traits_iterator_Iterator_t_Item))
    * Self);
}.

Arguments mkcore_iter_traits_double_ended_DoubleEndedIterator_t { _ }.
Arguments
  core_iter_traits_double_ended_DoubleEndedIterator_tcore_iter_traits_double_ended_DoubleEndedIterator_t_iteratorIteratorInst
  { _ } _.
Arguments core_iter_traits_double_ended_DoubleEndedIterator_t_next_back { _ }
  _.

(** Trait declaration: [core::iter::traits::exact_size::ExactSizeIterator]
    Source: '/rustc/library/core/src/iter/traits/exact_size.rs', lines 86:0-86:37
    Name pattern: core::iter::traits::exact_size::ExactSizeIterator *)
Record core_iter_traits_exact_size_ExactSizeIterator_t (Self : Type)
  := mkcore_iter_traits_exact_size_ExactSizeIterator_t {
  core_iter_traits_exact_size_ExactSizeIterator_tcore_iter_traits_exact_size_ExactSizeIterator_t_iteratorIteratorInst
    : core_iter_traits_iterator_Iterator_t Self;
}.

Arguments mkcore_iter_traits_exact_size_ExactSizeIterator_t { _ }.
Arguments
  core_iter_traits_exact_size_ExactSizeIterator_tcore_iter_traits_exact_size_ExactSizeIterator_t_iteratorIteratorInst
  { _ } _.

(** Trait declaration: [core::cmp::PartialEq]
    Source: '/rustc/library/core/src/cmp.rs', lines 248:0-248:39
    Name pattern: core::cmp::PartialEq *)
Record core_cmp_PartialEq_t (Self : Type) (Rhs : Type)
  := mkcore_cmp_PartialEq_t {
  core_cmp_PartialEq_t_eq : Self -> Rhs -> result bool;
}.

Arguments mkcore_cmp_PartialEq_t { _ } { _ }.
Arguments core_cmp_PartialEq_t_eq { _ } { _ } _.

(** Trait declaration: [core::cmp::Eq]
    Source: '/rustc/library/core/src/cmp.rs', lines 334:0-334:29
    Name pattern: core::cmp::Eq *)
Record core_cmp_Eq_t (Self : Type) := mkcore_cmp_Eq_t {
  core_cmp_Eq_tcore_cmp_Eq_t_PartialEqInst : core_cmp_PartialEq_t Self Self;
}.

Arguments mkcore_cmp_Eq_t { _ }.
Arguments core_cmp_Eq_tcore_cmp_Eq_t_PartialEqInst { _ } _.

(** [core::cmp::Ordering]
    Source: '/rustc/library/core/src/cmp.rs', lines 387:0-387:17
    Name pattern: core::cmp::Ordering *)
Inductive core_cmp_Ordering_t :=
| Core_cmp_Ordering_Less : core_cmp_Ordering_t
| Core_cmp_Ordering_Equal : core_cmp_Ordering_t
| Core_cmp_Ordering_Greater : core_cmp_Ordering_t
.

(** Trait declaration: [core::cmp::PartialOrd]
    Source: '/rustc/library/core/src/cmp.rs', lines 1293:0-1293:56
    Name pattern: core::cmp::PartialOrd *)
Record core_cmp_PartialOrd_t (Self : Type) (Rhs : Type)
  := mkcore_cmp_PartialOrd_t {
  core_cmp_PartialOrd_tcore_cmp_PartialOrd_t_PartialEqInst :
    core_cmp_PartialEq_t Self Rhs;
  core_cmp_PartialOrd_t_partial_cmp : Self -> Rhs -> result (option
    core_cmp_Ordering_t);
}.

Arguments mkcore_cmp_PartialOrd_t { _ } { _ }.
Arguments core_cmp_PartialOrd_tcore_cmp_PartialOrd_t_PartialEqInst { _ } { _ }
  _.
Arguments core_cmp_PartialOrd_t_partial_cmp { _ } { _ } _.

(** Trait declaration: [core::cmp::Ord]
    Source: '/rustc/library/core/src/cmp.rs', lines 946:0-946:36
    Name pattern: core::cmp::Ord *)
Record core_cmp_Ord_t (Self : Type) := mkcore_cmp_Ord_t {
  core_cmp_Ord_tcore_cmp_Ord_t_EqInst : core_cmp_Eq_t Self;
  core_cmp_Ord_tcore_cmp_Ord_t_PartialOrdInst : core_cmp_PartialOrd_t Self
    Self;
  core_cmp_Ord_t_cmp : Self -> Self -> result core_cmp_Ordering_t;
}.

Arguments mkcore_cmp_Ord_t { _ }.
Arguments core_cmp_Ord_tcore_cmp_Ord_t_EqInst { _ } _.
Arguments core_cmp_Ord_tcore_cmp_Ord_t_PartialOrdInst { _ } _.
Arguments core_cmp_Ord_t_cmp { _ } _.

(** Trait declaration: [core::iter::traits::accum::Sum]
    Source: '/rustc/library/core/src/iter/traits/accum.rs', lines 17:0-17:30
    Name pattern: core::iter::traits::accum::Sum *)
Record core_iter_traits_accum_Sum_t (Self : Type) (A : Type)
  := mkcore_iter_traits_accum_Sum_t {
  core_iter_traits_accum_Sum_t_sum : forall {I : Type} (iteratorIteratorInst :
    core_iter_traits_iterator_Iterator_t I), I -> result Self;
}.

Arguments mkcore_iter_traits_accum_Sum_t { _ } { _ }.
Arguments core_iter_traits_accum_Sum_t_sum { _ } { _ } _ { _ }.

(** Trait declaration: [core::iter::traits::accum::Product]
    Source: '/rustc/library/core/src/iter/traits/accum.rs', lines 38:0-38:34
    Name pattern: core::iter::traits::accum::Product *)
Record core_iter_traits_accum_Product_t (Self : Type) (A : Type)
  := mkcore_iter_traits_accum_Product_t {
  core_iter_traits_accum_Product_t_product : forall {I : Type}
    (iteratorIteratorInst : core_iter_traits_iterator_Iterator_t I), I ->
    result Self;
}.

Arguments mkcore_iter_traits_accum_Product_t { _ } { _ }.
Arguments core_iter_traits_accum_Product_t_product { _ } { _ } _ { _ }.

(** Trait declaration: [core::iter::adapters::zip::TrustedRandomAccessNoCoerce]
    Source: '/rustc/library/core/src/iter/adapters/zip.rs', lines 593:0-593:51
    Name pattern: core::iter::adapters::zip::TrustedRandomAccessNoCoerce *)
Record core_iter_adapters_zip_TrustedRandomAccessNoCoerce_t (Self : Type)
  := mkcore_iter_adapters_zip_TrustedRandomAccessNoCoerce_t {
  core_iter_adapters_zip_TrustedRandomAccessNoCoerce_tcore_iter_adapters_zip_TrustedRandomAccessNoCoerce_t_MAY_HAVE_SIDE_EFFECT
    : bool;
}.

Arguments mkcore_iter_adapters_zip_TrustedRandomAccessNoCoerce_t { _ }.
Arguments
  core_iter_adapters_zip_TrustedRandomAccessNoCoerce_tcore_iter_adapters_zip_TrustedRandomAccessNoCoerce_t_MAY_HAVE_SIDE_EFFECT
  { _ } _.

(** [core::ops::arith::{core::ops::arith::Mul<i32> for i32}#137::mul]:
    Source: '/rustc/library/core/src/ops/arith.rs', lines 342:12-342:41
    Name pattern: core::ops::arith::{core::ops::arith::Mul<i32, i32>}::mul *)
Axiom core_ops_arith_MulI32I32_mul : i32 -> i32 -> result i32.

(** Trait implementation: [core::ops::arith::{core::ops::arith::Mul<i32> for i32}#137]
    Source: '/rustc/library/core/src/ops/arith.rs', lines 336:8-336:23
    Name pattern: core::ops::arith::Mul<i32, i32> *)
Definition core_ops_arith_MulI32I32 : core_ops_arith_Mul_t i32 i32 := {|
  core_ops_arith_Mul_tcore_ops_arith_Mul_t_Output := i32;
  core_ops_arith_Mul_t_mul := core_ops_arith_MulI32I32_mul;
|}.

End ClosureArguments.rs.
