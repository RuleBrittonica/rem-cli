(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [rem_cli] *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Module BreakFromNestedAndOuterLoopsRef.rs.

(** [rem_cli::fun_name]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/break_from_nested_and_outer_loops_ref.rs', lines 12:0-22:1 *)
Definition fun_name : result (option i32) :=
  if 1%i32 s= 42%i32 then Ok None else (m <- i32_add 1%i32 1%i32; Ok (Some m))
.

(** [rem_cli::foo]: loop 0:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/break_from_nested_and_outer_loops_ref.rs', lines 2:4-9:5 *)
Fixpoint foo_loop : result unit :=
  o <- fun_name;
  match o with
  | None => Ok tt
  | Some value => _ <- i32_add 1%i32 value; foo_loop
  end
.

(** [rem_cli::foo]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/break_from_nested_and_outer_loops_ref.rs', lines 1:0-10:1 *)
Definition foo : result unit :=
  foo_loop.

(** [rem_cli::main]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/break_from_nested_and_outer_loops_ref.rs', lines 24:0-26:1 *)
Definition main : result unit :=
  Ok tt.

End BreakFromNestedAndOuterLoopsRef.rs.
