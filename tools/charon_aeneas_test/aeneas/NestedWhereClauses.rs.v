(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [rem_cli] *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Module NestedWhereClauses.rs.

(** Trait declaration: [core::convert::Into]
    Source: '/rustc/library/core/src/convert/mod.rs', lines 446:0-446:24
    Name pattern: core::convert::Into *)
Record core_convert_Into_t (Self : Type) (T : Type) := mkcore_convert_Into_t {
  core_convert_Into_t_into : Self -> result T;
}.

Arguments mkcore_convert_Into_t { _ } { _ }.
Arguments core_convert_Into_t_into { _ } { _ } _.

(** [rem_cli::Struct]
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/nested_where_clauses.rs', lines 1:0-1:39 *)
Definition Struct_t {T : Type} (coreconvertIntoTI32Inst : core_convert_Into_t T
  i32) : Type :=
T
.

(** [rem_cli::{rem_cli::Struct<T>[TraitClause@1]}::func]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/nested_where_clauses.rs', lines 3:4-6:5 *)
Definition struct_func
  {T : Type} {V : Type} (coreconvertIntoTI32Inst : core_convert_Into_t T i32)
  (coremarkerCopyInst : core_marker_Copy T) (coreconvertIntoVI32Inst :
  core_convert_Into_t V i32) (self : Struct_t T coreconvertIntoTI32Inst)
  (v : V) :
  result i32
  :=
  i <- coreconvertIntoTI32Inst.(core_convert_Into_t_into) self;
  i1 <- coreconvertIntoVI32Inst.(core_convert_Into_t_into) v;
  i32_add i i1
.

(** [rem_cli::main]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/nested_where_clauses.rs', lines 9:0-11:1 *)
Definition main : result unit :=
  Ok tt.

End NestedWhereClauses.rs.
