(** THIS FILE WAS AUTOMATICALLY GENERATED BY AENEAS *)
(** [rem_cli] *)
Require Import Primitives.
Import Primitives.
Require Import Coq.ZArith.ZArith.
Require Import List.
Import ListNotations.
Local Open Scope Primitives_scope.
Module MethodWithMutRef.rs.

(** [rem_cli::S]
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/method_with_mut_ref.rs', lines 1:0-1:19 *)
Record S_t := mkS_t { s_f : i32; }.

(** [rem_cli::{rem_cli::S}::fun_name]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/method_with_mut_ref.rs', lines 8:4-10:5 *)
Definition s_fun_name (self : S_t) : result S_t :=
  i <- i32_add self.(s_f) 1%i32; Ok {| s_f := i |}
.

(** [rem_cli::{rem_cli::S}::foo]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/method_with_mut_ref.rs', lines 4:4-6:5 *)
Definition s_foo (self : S_t) : result S_t :=
  s_fun_name self.

(** [rem_cli::main]:
    Source: '/home/matt/rem-matt/rem-cli/tools/charon_aeneas_test/rust/method_with_mut_ref.rs', lines 13:0-15:1 *)
Definition main : result unit :=
  Ok tt.

End MethodWithMutRef.rs.
